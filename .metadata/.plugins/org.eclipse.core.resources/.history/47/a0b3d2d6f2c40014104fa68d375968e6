package com.infinity.wefriends;

import java.util.ArrayList;
import java.util.List;

import android.content.ContentValues;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;

public class ContactExpandableListAdapter extends BaseExpandableListAdapter {
	
	protected List<ContentValues> contactList = null;
	protected List<String> groupList = null;
	protected List<ArrayList<ContentValues>> groupMemberList = null;
	
	public ContactExpandableListAdapter(List<ContentValues> values) {
		contactList = values;
		groupList = getGroupList();
		groupMemberList = parseContactList();
	}

	@Override
	public Object getChild(int groupPosition, int childPosition) {
		// TODO Auto-generated method stub
		return groupMemberList.get(groupPosition).get(childPosition);
	}

	@Override
	public long getChildId(int groupPosition, int childPosition) {
		// TODO Auto-generated method stub
		return childPosition;
	}

	@Override
	public View getChildView(int groupPosition, int childPosition,
			boolean isLastChild, View convertView, ViewGroup parent) {
		ContentValues contactInfo = (ContentValues)getChild(groupPosition,childPosition);
		
		return null;
	}

	@Override
	public int getChildrenCount(int groupPosition) {
		return groupMemberList.get(groupPosition).size();
	}

	@Override
	public Object getGroup(int groupPosition) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getGroupCount() {
		return groupList.size();
	}

	@Override
	public long getGroupId(int groupPosition) {
		// TODO Auto-generated method stub
		return groupPosition;
	}

	@Override
	public View getGroupView(int groupPosition, boolean isExpanded,
			View convertView, ViewGroup parent) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean hasStableIds() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isChildSelectable(int groupPosition, int childPosition) {
		// TODO Auto-generated method stub
		return false;
	}
	
	protected List<ArrayList<ContentValues>> parseContactList() {
		int groupCount = groupList.size();
		int contactCount = contactList.size();
		List<ArrayList<ContentValues>> resultList = new  ArrayList<ArrayList<ContentValues>>();
		for (int groupIndex = 0; groupIndex<groupCount; groupIndex++) {
			String groupName = groupList.get(groupIndex);
			ArrayList<ContentValues> memberList = new ArrayList<ContentValues>();
			for (int contactIndex=0;contactIndex<contactCount;contactIndex++) {
				if (contactList.get(contactIndex).getAsString("friendgroup").equals(groupName)) {
					memberList.add(contactList.get(contactIndex));
				}
			}
			resultList.add(memberList);
		}
		return resultList;
	}
	
	protected List<String> getGroupList() {
		List<String> groupList = new ArrayList<String>();
		int contactCount = contactList.size();
		for (int i=0;i<contactCount;i++) {
			String groupName = contactList.get(i).getAsString("friendgroup");
			if (!groupList.contains(groupName)) {
				groupList.add(groupName);
			}
		}
		return groupList;
	}

}
