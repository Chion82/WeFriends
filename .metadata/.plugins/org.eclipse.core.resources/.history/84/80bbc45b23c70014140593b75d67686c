package com.infinity.wefriends;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;

public class NotifierService extends Service {
	
	protected boolean isBound = false;
	protected boolean isFirstlyCreated = true;
	protected RunningThread serviceThread = null;
	protected Socket socket = null;
	protected Context m_context = null;

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		if (serviceThread == null)
		{
			serviceThread = new RunningThread();
			serviceThread.start();
		}
		return super.onStartCommand(intent, flags, startId);
	}

	@Override
	public IBinder onBind(Intent intent) {
		if (isFirstlyCreated)
			this.startService(intent);
		m_context = getApplicationContext();
		isBound = true;
		isFirstlyCreated = false;
		return null;
	}
	
	@Override
	public boolean onUnbind(Intent intent) {
		isBound = false;
		return super.onUnbind(intent);
	}
	
	class RunningThread extends Thread {
		@Override
		public void run() {
			boolean connError = false;
			do {
				try {
					socket = new Socket(m_context.getString(R.string.server_host),Integer.parseInt(m_context.getString(R.string.server_notifier_port)));
					OutputStream output = socket.getOutputStream();
					InputStream input = socket.getInputStream();
				
					
				} catch (NumberFormatException e) {
					e.printStackTrace();
				} catch (UnknownHostException e) {
					e.printStackTrace();
				} catch (IOException e) {
					connError = true;
					e.printStackTrace();
				}
			} while (connError);
			super.run();
		}
	}

}
